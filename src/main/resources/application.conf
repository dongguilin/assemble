#rocketmq
mq {
  #nameserver地址列表，多个地址以","作为分隔符
  namesrv: "${mq.namesrv}"
  #消费的主题
  topic: "${mq.topic}"
  tags: "*"
  #批量拉消息，一次最多拉多少条
  pullBathSize: 1000
  #consumer组名
  consumerGroup: "${mq.consumerGroup}"
  consumeThreadMin: 3
  consumeThreadMax: 8
}

#elasticsearch
es {
  #集群名称
  cluster: "${es.cluster}"
  #客户端连接地址，多个地址以","作为分隔符
  hosts: "${es.hosts}"
  #权限配置
  shield: {
    enabled: ${es.shield.enabled} #是否启用shield权限
    user: es_admin                   #用户名
    pwd: 123456                      #密码
  },
  #连接池
  pool {
    maxTotal: 8  #最大连接数
    maxIdle: 5   #最大空闲连接数
    maxWaitMills: 6000 #当连接池资源耗尽时，调用者最大阻塞的时间，超时将抛出异常
  }
}

#工序(程序已实现的可用的工序列表，key为工序名称,value为实现类)
procedures {
  #抽取出业务时间
  timestamp: com.htjc.assemble.procedure.impl.TimestampProcedure
  #过滤掉以_TIME为后缀且其值为空的字段
  filternulltime: com.htjc.assemble.procedure.impl.FilterNullTimeProcedure
  #计算doc入es的索引,如monitor-2016-08
  esindex: com.htjc.assemble.procedure.impl.EsTimeBasedIndexProcedure
  #解析ip地址，抽取出洲、国家、省份、城市、运营商、国家代码、经度、纬度等信息
  geoip: com.htjc.assemble.procedure.impl.GeoIpProcedure
  #解析身份证号码获取出生地址、性别、出生年月等信息
  idcard: com.htjc.assemble.procedure.impl.IDCardProcedure
  #使用正则拆分字段
  regex: com.htjc.assemble.procedure.impl.RegexProcedure
}

#工序链规则配置
rules: [
  {
    #工序链名称,DEFAULT为默认工序链配置，其他都为自定义工序链配置
    name: DEFAULT
    procedures: [{
      name: timestamp #工序名称
      config: {  #工序配置参数，选填
        dateField: CREATE_TIME
        dateFormatStr: "yyyyMMddHHmmssSSS"
        isTimestamp: false
      }
    }, {
      name: filternulltime
    }, {
      name: esindex
      config: {
        #索引名称前缀标识,
        prefix: monitor
        #索引名称后缀日期格式
        dateformat: yyyy-MM
      }
    }]
  }, {
    name: "ZFPT_HX:HX_INDIVIDUAL_USER_INFO"
    procedures: [{
      name: timestamp
    }, {
      name: geoip
      config: {
        ipField: userIP
        geoipField: geoip
      }
    }, {
      name: esindex
    }]
  }, {
    name: "method-invoke"
    procedures: [{name: timestamp}, {name: esindex, config: {prefix: method-invoke}}]
  }, {
    name: "idcard"
    procedures: [{name: timestamp}, {name: idcard, config: {field: idcard}},
      {
        name: regex,
        config: {
          #key:字段名称，value:正则表达式，使用value的正则表达式解析key字段生成新的字段
          idcard: "(?<addressCode>\\d{6})(?<birthdayCode>\\d{8})(?:.*)"
        }
      },
      {name: esindex}]
  }
]
